// <auto-generated />
using System;
using DBase.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DBase.Models.Customer", b =>
                {
                    b.Property<Guid>("ID_Customer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Auto"));

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("ID_Customer");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            ID_Customer = new Guid("573eb718-2845-46a3-94b8-b09de8a1d624"),
                            Address = "123 Main St, Anytown, USA",
                            Auto = 0,
                            CustomerName = "John Doe",
                            Email = "john.doe@example.com",
                            Phone = "111-222-3333"
                        },
                        new
                        {
                            ID_Customer = new Guid("3d6dc92a-6a71-48d0-a09e-811f1a7133de"),
                            Address = "456 Elm St, Othertown, USA",
                            Auto = 0,
                            CustomerName = "Jane Smith",
                            Email = "jane.smith@example.com",
                            Phone = "444-555-6666"
                        });
                });

            modelBuilder.Entity("DBase.Models.Order", b =>
                {
                    b.Property<Guid>("ID_Order")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Auto"));

                    b.Property<Guid>("CustomerID")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.HasKey("ID_Order");

                    b.HasIndex("CustomerID");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            ID_Order = new Guid("72a56ca7-7292-4901-b8b2-8b8d859a5184"),
                            Auto = 0,
                            CustomerID = new Guid("573eb718-2845-46a3-94b8-b09de8a1d624"),
                            OrderDate = new DateTime(2024, 10, 17, 9, 35, 32, 782, DateTimeKind.Utc).AddTicks(5514),
                            Status = "Completed",
                            TotalAmount = 25.00m
                        },
                        new
                        {
                            ID_Order = new Guid("37e33bbb-96e4-435a-835a-3e076754907d"),
                            Auto = 0,
                            CustomerID = new Guid("3d6dc92a-6a71-48d0-a09e-811f1a7133de"),
                            OrderDate = new DateTime(2024, 10, 17, 9, 35, 32, 782, DateTimeKind.Utc).AddTicks(5522),
                            Status = "Pending",
                            TotalAmount = 30.00m
                        });
                });

            modelBuilder.Entity("DBase.Models.OrderDetail", b =>
                {
                    b.Property<Guid>("ID_OrderDetails")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Auto"));

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.HasKey("ID_OrderDetails");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            ID_OrderDetails = new Guid("c76de488-7673-4dac-b83f-2e00f2225bc4"),
                            Auto = 0,
                            OrderId = new Guid("72a56ca7-7292-4901-b8b2-8b8d859a5184"),
                            ProductId = new Guid("122b3317-2815-41bb-bfd3-afcb75fb8a20"),
                            Quantity = 2,
                            UnitPrice = 10.00m
                        },
                        new
                        {
                            ID_OrderDetails = new Guid("284f95d7-fc50-44fd-9651-dde0a3fc1e0b"),
                            Auto = 0,
                            OrderId = new Guid("72a56ca7-7292-4901-b8b2-8b8d859a5184"),
                            ProductId = new Guid("01444e9a-ba89-46c1-9ba4-37cc7413695c"),
                            Quantity = 1,
                            UnitPrice = 15.00m
                        },
                        new
                        {
                            ID_OrderDetails = new Guid("ad232511-ff0b-4464-a30a-b1a0afe23a95"),
                            Auto = 0,
                            OrderId = new Guid("37e33bbb-96e4-435a-835a-3e076754907d"),
                            ProductId = new Guid("d9b2a1e8-df8c-40ea-891b-756652ec7cb8"),
                            Quantity = 1,
                            UnitPrice = 20.00m
                        });
                });

            modelBuilder.Entity("DBase.Models.Product", b =>
                {
                    b.Property<Guid>("ID_Product")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Auto"));

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)");

                    b.Property<int>("QuantityInStock")
                        .HasColumnType("integer");

                    b.Property<Guid>("SupplierID")
                        .HasColumnType("uuid");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("numeric");

                    b.Property<Guid>("WarehouseID")
                        .HasColumnType("uuid");

                    b.HasKey("ID_Product");

                    b.HasIndex("SupplierID");

                    b.HasIndex("WarehouseID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID_Product = new Guid("122b3317-2815-41bb-bfd3-afcb75fb8a20"),
                            Auto = 0,
                            ProductName = "Product 1",
                            QuantityInStock = 100,
                            SupplierID = new Guid("90b9f4db-9194-4129-bd2a-53e16a4eaa16"),
                            UnitPrice = 10.00m,
                            WarehouseID = new Guid("ca897d41-a45f-43fc-bd4a-6398f2e63b5f")
                        },
                        new
                        {
                            ID_Product = new Guid("01444e9a-ba89-46c1-9ba4-37cc7413695c"),
                            Auto = 0,
                            ProductName = "Product 2",
                            QuantityInStock = 200,
                            SupplierID = new Guid("90b9f4db-9194-4129-bd2a-53e16a4eaa16"),
                            UnitPrice = 15.00m,
                            WarehouseID = new Guid("ca897d41-a45f-43fc-bd4a-6398f2e63b5f")
                        },
                        new
                        {
                            ID_Product = new Guid("d9b2a1e8-df8c-40ea-891b-756652ec7cb8"),
                            Auto = 0,
                            ProductName = "Product 3",
                            QuantityInStock = 150,
                            SupplierID = new Guid("364f879f-7d1b-4612-badd-fc7829a6dfd3"),
                            UnitPrice = 20.00m,
                            WarehouseID = new Guid("ced05974-656b-4f78-946c-0ffaa0bf8140")
                        });
                });

            modelBuilder.Entity("DBase.Models.Supplier", b =>
                {
                    b.Property<Guid>("ID_Supplier")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Auto"));

                    b.Property<string>("ContactName")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("ID_Supplier");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            ID_Supplier = new Guid("90b9f4db-9194-4129-bd2a-53e16a4eaa16"),
                            Auto = 0,
                            ContactName = "Alice",
                            Email = "alice@supplier.com",
                            Phone = "123-456-7890",
                            SupplierName = "Supplier A"
                        },
                        new
                        {
                            ID_Supplier = new Guid("364f879f-7d1b-4612-badd-fc7829a6dfd3"),
                            Auto = 0,
                            ContactName = "Bob",
                            Email = "bob@supplier.com",
                            Phone = "098-765-4321",
                            SupplierName = "Supplier B"
                        });
                });

            modelBuilder.Entity("DBase.Models.Warehouse", b =>
                {
                    b.Property<Guid>("ID_Warehouse")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Auto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Auto"));

                    b.Property<int>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("character varying(400)");

                    b.Property<string>("ManagerName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("WarehouseName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.HasKey("ID_Warehouse");

                    b.ToTable("Warehouses");

                    b.HasData(
                        new
                        {
                            ID_Warehouse = new Guid("ca897d41-a45f-43fc-bd4a-6398f2e63b5f"),
                            Auto = 0,
                            Capacity = 1000,
                            Location = "Location A",
                            ManagerName = "Manager A",
                            WarehouseName = "Warehouse 1"
                        },
                        new
                        {
                            ID_Warehouse = new Guid("ced05974-656b-4f78-946c-0ffaa0bf8140"),
                            Auto = 0,
                            Capacity = 2000,
                            Location = "Location B",
                            ManagerName = "Manager B",
                            WarehouseName = "Warehouse 2"
                        });
                });

            modelBuilder.Entity("DBase.Models.Order", b =>
                {
                    b.HasOne("DBase.Models.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("DBase.Models.OrderDetail", b =>
                {
                    b.HasOne("DBase.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBase.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DBase.Models.Product", b =>
                {
                    b.HasOne("DBase.Models.Supplier", "Supplier")
                        .WithMany("Products")
                        .HasForeignKey("SupplierID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DBase.Models.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("DBase.Models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DBase.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DBase.Models.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("DBase.Models.Supplier", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DBase.Models.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
